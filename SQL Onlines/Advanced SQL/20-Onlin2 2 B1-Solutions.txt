1.

SELECT (SELECT C.TITLE FROM COURSE C WHERE C.COURSE_ID = T.COURSE_ID) COURSE_TITLE
FROM TAKES T 
WHERE (SELECT S.DEPT_NAME FROM STUDENT S WHERE T.ID = S.ID ) IN ('Comp. Sci.', 'Math')
UNION 
SELECT C.TITLE COURSE_TITLE
FROM COURSE C  
WHERE NOT EXISTS 
( 
	SELECT *
	FROM TAKES T
	WHERE C.COURSE_ID = T.COURSE_ID 
				AND (SELECT S.DEPT_NAME FROM STUDENT S WHERE T.ID = S.ID ) = 'Elec. Eng.'
)
ORDER BY COURSE_TITLE ;

2. 

SELECT S.NAME STUDENT_NAME 
FROM STUDENT S 
WHERE 
EXISTS
(
	SELECT DISTINCT TC.COURSE_ID
	FROM TEACHES TC
	WHERE TC.ID = (SELECT A.I_ID FROM ADVISOR A WHERE A.S_ID = S.ID)
	INTERSECT
	SELECT DISTINCT TK.COURSE_ID
	FROM TAKES TK 
	WHERE TK.ID = S.ID 
)
ORDER BY S.NAME;

3.

SELECT S.NAME STUDENT_NAME , S.DEPT_NAME, S.TOT_CRED TOTAL_CRED
FROM STUDENT S
WHERE 
NOT EXISTS
(
	SELECT P.PREREQ_ID
	FROM PREREQ P
	WHERE P.COURSE_ID = 
	(
		SELECT C.COURSE_ID
		FROM COURSE C
		WHERE C.TITLE = 'Image Processing' 
		AND   C.DEPT_NAME = 'Finance'
	)
	MINUS 
	SELECT T.COURSE_ID 
	FROM TAKES T
	WHERE T.ID = S.ID 
)
ORDER BY S.NAME;

4. 

SELECT DISTINCT T.ID, (SELECT I.NAME FROM INSTRUCTOR I WHERE I.ID = T.ID ) INSTRUCTOR_NAME
FROM TEACHES T
WHERE 
(
	SELECT COUNT(*)
	FROM 
	(
		SELECT DISTINCT T2.SEMESTER, T2.YEAR 
		FROM TEACHES T2 
		WHERE T2.ID = T.ID 
	)
) >= 5
ORDER BY INSTRUCTOR_NAME;

5.

SELECT (SELECT I.NAME FROM INSTRUCTOR I WHERE I.ID = T.ID) INSTRUCTOR_NAME, (SELECT C.TITLE FROM COURSE C WHERE C.COURSE_ID = T.COURSE_ID) COURSE_TITLE, T.YEAR
FROM TEACHES T 
WHERE EXISTS
(
	SELECT *
	FROM TEACHES T2 
	WHERE T2.ID = T.ID 
	AND   T2.COURSE_ID = T.COURSE_ID
	AND   T2.YEAR = (T.YEAR + 1)
)
ORDER BY T.YEAR;
