1.

CREATE OR REPLACE FUNCTION COMPARE(CID1 IN VARCHAR2, CID2 IN VARCHAR2)
RETURN VARCHAR2 IS
	
	CNT1 NUMBER;
	CNT2 NUMBER;
	MSG VARCHAR2(100);
	
BEGIN 
	
	SELECT COUNT(DISTINCT COURSE_ID) INTO CNT1
	FROM PREREQ 
	WHERE PREREQ_ID = CID1;
	
	SELECT COUNT(DISTINCT COURSE_ID) INTO CNT2
	FROM PREREQ 
	WHERE PREREQ_ID = CID2;
	
	IF CNT1 > CNT2 THEN 
	
		MSG := 'TRUE';
		
	ELSE 
	
		MSG := 'FALSE';
		
	END IF;
	
	RETURN MSG;
	
END;
/


DECLARE 
	
	ANSWER VARCHAR2(100);
	
BEGIN 
	
	FOR R1 IN (
	SELECT C.COURSE_ID, C.TITLE
	FROM COURSE C JOIN DEPARTMENT D 
	ON (C.DEPT_NAME = D.DEPT_NAME)
	WHERE UPPER(D.BUILDING) = 'LAMBEAU'
	ORDER BY C.TITLE
	)
	LOOP 
	
		FOR R2 IN (
		SELECT C.COURSE_ID, C.TITLE
		FROM COURSE C JOIN DEPARTMENT D 
		ON (C.DEPT_NAME = D.DEPT_NAME)
		WHERE UPPER(D.BUILDING) = 'BRONFMAN'
		ORDER BY C.TITLE
		)
		LOOP 
		
			ANSWER := COMPARE(R1.COURSE_ID,R2.COURSE_ID);
			
			IF ANSWER = 'TRUE' THEN 
			
				DBMS_OUTPUT.PUT_LINE( R1.TITLE || ' needs more prerequisites than ' || R2.TITLE );
				
			END IF;
	
			
		END LOOP;
		
	END LOOP;
	
END;
/

2.

create FUNCTION FIND_CGPA_FOR_SEMESTER(S_ID IN NUMBER, S IN VARCHAR2, Y IN NUMBER) 
RETURN FLOAT IS

	CGPA FLOAT;
	
BEGIN

	SELECT ROUND(SUM(GP) / SUM(CREDITS), 4) INTO CGPA
	FROM
	(
	SELECT MAX(GRADE_TO_POINT(GRADE) * CREDITS) AS GP, CREDITS
	FROM TAKES INNER JOIN COURSE C2 
	on TAKES.COURSE_ID = C2.COURSE_ID 
	WHERE ID = S_ID
	AND TAKES.YEAR = Y
	AND TAKES.SEMESTER = S
	GROUP BY ID, C2.COURSE_ID, CREDITS
	);
	-- DBMS_OUTPUT.PUT_LINE('CGPA OF ID ' || S_ID || ' IS ' || CGPA);
	RETURN CGPA;

end;
/

DECLARE 
	
	CG FLOAT;
	
BEGIN 
	
	CG := FIND_CGPA_FOR_SEMESTER(1367,'Fall',2002);
	DBMS_OUTPUT.PUT_LINE(CG);
	
END;
/

CREATE OR REPLACE PROCEDURE FIND_PATTERN(SID IN VARCHAR2) IS
	
	INC NUMBER;
	DSC NUMBER;
	CURR FLOAT;
	POINT FLOAT;
	
BEGIN 
	
	INC := 1;
	DSC := 1;
	CURR := 0;
	
	FOR R IN (
	SELECT DISTINCT SEMESTER, YEAR
	FROM TAKES 
	WHERE ID = SID
	ORDER BY YEAR ASC, SEMESTER DESC
	)
	LOOP 
		
		POINT := FIND_CGPA_FOR_SEMESTER(SID,R.SEMESTER,R.YEAR);
		
		IF POINT < CURR AND INC = 1 THEN 
		
			INC := 0;
			
		ELSIF POINT >= CURR AND DSC = 1 THEN
		
			DSC := 0;
			
		END IF;

		CURR := POINT;
		
		
	END LOOP;
	
	IF INC = 1 THEN 
	
		DBMS_OUTPUT.PUT_LINE('CGPA is always increasing');
		
	ELSIF DSC = 1 THEN
	
		DBMS_OUTPUT.PUT_LINE('CGPA is always decreasing');
		
	ELSE 
	
		DBMS_OUTPUT.PUT_LINE('CGPA is following a zig-zag pattern');
		
	END IF;

EXCEPTION 

	WHEN OTHERS THEN 
		DBMS_OUTPUT.PUT_LINE('Unknown Error Occurred');
	
END;
/


DECLARE 
	
BEGIN 
	
	FIND_PATTERN(1367);
	
END;
/