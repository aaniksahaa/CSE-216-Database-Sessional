1. 

CREATE OR REPLACE FUNCTION CHECK_TEN(SID IN VARCHAR2)
RETURN VARCHAR2 IS
	
	DEPT_NUMBER NUMBER;
	MSG VARCHAR2(100);
	
BEGIN 
	
	SELECT COUNT(DISTINCT C.DEPT_NAME) INTO DEPT_NUMBER
	FROM TAKES T JOIN COURSE C 
	ON (T.COURSE_ID = C.COURSE_ID)
	WHERE T.ID = SID;
	
	IF DEPT_NUMBER > 10 THEN 
	
		MSG := 'TRUE';
		
	ELSE 
	
		MSG := 'FALSE';
		
	END IF;
	
	RETURN MSG;
	
END;
/

DECLARE 
	
	MESSAGE VARCHAR2(100);
	
BEGIN 
	
	MESSAGE := CHECK_TEN(1367);
	DBMS_OUTPUT.PUT_LINE(MESSAGE);
	
END;
/

DECLARE 
	
	ANSWER VARCHAR2(100);
	
BEGIN 
	
	FOR R IN (SELECT * FROM STUDENT ORDER BY TO_NUMBER(ID) DESC)
	LOOP 
	
		IF R.TOT_CRED = 125 THEN 
		
			ANSWER := CHECK_TEN(R.ID);
			
			IF ANSWER = 'TRUE' THEN 
		
				DBMS_OUTPUT.PUT_LINE('Student ID: ' || R.ID || ' has enrolled in more than ten departments.');
			
			ELSE
			
				DBMS_OUTPUT.PUT_LINE('Student ID: ' || R.ID || ' has not enrolled in more than ten departments.');
				
			END IF;
			
		END IF;
	
		
	END LOOP;
	
END;
/

2.


CREATE OR REPLACE FUNCTION GET_POINT(GRADE IN VARCHAR2)
RETURN VARCHAR2 IS
	
	POINT NUMBER;
	
BEGIN 
	
	IF GRADE = 'A+' THEN 
	
		POINT := 4.00;
		
	ELSIF GRADE = 'A' THEN
	
		POINT := 3.75;
	
	ELSIF GRADE = 'A-' THEN
	
		POINT := 3.5;
	
	ELSIF GRADE = 'B+' THEN
	
		POINT := 3.25;
		
	ELSIF GRADE = 'B' THEN
	
		POINT := 3;
	
	ELSIF GRADE = 'B-' THEN
	
		POINT := 2.75;
		
	ELSIF GRADE = 'C+' THEN
	
		POINT := 2.5;
	
	ELSIF GRADE = 'C' THEN
	
		POINT := 2.25;
		
	ELSIF GRADE = 'C-' THEN
	
		POINT := 2.15;
		
		
	ELSE 
	
		POINT := 0.00;
		
	END IF;
	
	RETURN POINT;
	
END;
/

/*
DECLARE 
	
	POINT NUMBER;
	
BEGIN 
	
	POINT := GET_POINT('C+');
	DBMS_OUTPUT.PUT_LINE(POINT);
	
END;
/
*/


CREATE OR REPLACE PROCEDURE CALC_CGPA(SID IN VARCHAR2, CGPA OUT NUMBER) IS
	
	POINT NUMBER;
	TAKEN_CREDITS NUMBER;
	
BEGIN 
	
	TAKEN_CREDITS := 0;
	POINT := 0.0;
	
	FOR R IN (
	SELECT C.COURSE_ID, MAX(GET_POINT(T.GRADE)) AS MAX_GRADE, C.CREDITS
	FROM TAKES T JOIN COURSE C
	ON (T.COURSE_ID = C.COURSE_ID)
	WHERE T.ID = SID
	GROUP BY C.COURSE_ID, C.CREDITS
	)
	LOOP 
	
		POINT := POINT + R.MAX_GRADE*R.CREDITS;
		TAKEN_CREDITS := TAKEN_CREDITS + R.CREDITS;
		
	END LOOP;
	
	POINT := POINT / TAKEN_CREDITS;
	
	CGPA := ROUND(POINT,4);
	
EXCEPTION 

	WHEN OTHERS THEN 
		DBMS_OUTPUT.PUT_LINE('Unknown Error Occurred');
	
END;
/

DECLARE 
	
	POINT NUMBER;
	
BEGIN 
	
	POINT := 0.0;
	CALC_CGPA('1367',POINT);
	DBMS_OUTPUT.PUT_LINE('CGPA = ' || POINT);
	
END;
/





