20-online-3-b1

1.

CREATE OR REPLACE FUNCTION CHECK_SEMESTER(SID IN VARCHAR2)
RETURN NUMBER IS
	
	FALL_COUNT NUMBER;
	SPRING_COUNT NUMBER;
	ANSWER NUMBER;
	
BEGIN 
	
	SELECT COUNT(*) INTO FALL_COUNT
	FROM TAKES
	WHERE ID = SID AND SEMESTER = 'Fall';
	
	SELECT COUNT(*) INTO SPRING_COUNT
	FROM TAKES
	WHERE ID = SID AND SEMESTER = 'Spring';
	
	IF FALL_COUNT > SPRING_COUNT THEN 
	
		ANSWER := 13;
		
	ELSIF FALL_COUNT < SPRING_COUNT THEN
	
		ANSWER := -7;
		
	ELSE 
	
		ANSWER := 0;
		
	END IF;
	
	RETURN ANSWER;
	
END;
/


DECLARE 
	
	ANSWER NUMBER;
	MESSAGE VARCHAR2(100);
	
BEGIN 
	
	FOR R IN (SELECT S_ID FROM ADVISOR WHERE I_ID = 90643 ORDER BY TO_NUMBER(S_ID))
	LOOP 
	
		ANSWER := CHECK_SEMESTER(R.S_ID);
		
		IF ANSWER = 13 THEN 
		
			MESSAGE := 'has more courses in fall semesters.';
			
		ELSIF ANSWER = -7 THEN
		
			MESSAGE := 'has more courses in spring semesters.';
			
		ELSE 
		
			MESSAGE := 'has the same number of courses in spring and fall semesters.';
			
		END IF;
		
		DBMS_OUTPUT.PUT_LINE(R.S_ID || ' ' || MESSAGE);
	
		
	END LOOP;
	
END;
/

2.



CREATE OR REPLACE PROCEDURE INCREMENT_SALARY IS
	
	PREV_SAL NUMBER;
	NEW_SAL NUMBER;
	
BEGIN 
	
	FOR R1 IN (SELECT * FROM INSTRUCTOR WHERE SALARY<=125000 ORDER BY TO_NUMBER(ID))
	LOOP 
	
		FOR R2 IN (SELECT AVG(C.CREDITS) AS AVG_CREDITS FROM TEACHES T JOIN COURSE C ON (T.COURSE_ID = C.COURSE_ID) WHERE T.ID = R1.ID GROUP BY C.CREDITS HAVING COUNT(*) > 0)
		LOOP 
		
			PREV_SAL := R1.SALARY;
		
-- 			UPDATE INSTRUCTOR I
-- 			SET SALARY = SALARY + (R2.AVG_CREDITS*SALARY)/100
-- 			WHERE I.ID = R1.ID;
			
			NEW_SAL := PREV_SAL + (R2.AVG_CREDITS*PREV_SAL)/100;
			
			DBMS_OUTPUT.PUT_LINE('Salary of ' || R1.NAME || ' has increased from ' || ROUND(PREV_SAL,2) ||' to ' || ROUND(NEW_SAL,2));
			
		END LOOP;
		
	END LOOP;
	
EXCEPTION 

	WHEN OTHERS THEN 
		DBMS_OUTPUT.PUT_LINE('Unknown Error Occurred');
	
END;
/


DECLARE 
	
	
	
BEGIN 
	
	INCREMENT_SALARY;
	
END;
/















