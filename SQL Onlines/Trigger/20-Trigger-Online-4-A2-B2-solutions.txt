1.

CREATE OR REPLACE TRIGGER EMP_CHECK
BEFORE INSERT
ON EMPLOYEES
FOR EACH ROW
DECLARE 
	
	DESIRED_EMAIL VARCHAR2(100);
	DESIRED_PHONE VARCHAR2(100);
	
BEGIN 
	
	DESIRED_EMAIL := LOWER(:NEW.LAST_NAME) || '@orcl.com';
	
	IF :NEW.EMAIL IS NULL OR :NEW.EMAIL != DESIRED_EMAIL THEN 
	
		:NEW.EMAIL := LOWER(:NEW.LAST_NAME) || '.' || :NEW.JOB_ID || '@orcl.com';
		
	END IF;
	
	IF :NEW.DEPARTMENT_ID IS NULL THEN 
	
		DESIRED_PHONE := '5555-' || :NEW.EMPLOYEE_ID || '-000';
		
	ELSE
	
		DESIRED_PHONE := '5555-' || :NEW.EMPLOYEE_ID || '-' || :NEW.DEPARTMENT_ID;
		
	END IF;
	
	IF :NEW.PHONE_NUMBER IS NULL OR :NEW.PHONE_NUMBER != DESIRED_PHONE THEN 
	
		:NEW.PHONE_NUMBER := DESIRED_PHONE;
		
	END IF;
	
	
	IF :NEW.SALARY < 0 THEN 
	
		RAISE_APPLICATION_ERROR(-20001, 'Negative Value in Salary Field Insertion Aborted');
		
	END IF;
	
END;
/

2.

CREATE OR REPLACE TRIGGER LOG_SALARY_CHANGE
AFTER UPDATE OR INSERT OR DELETE
OF SALARY
ON EMPLOYEES
FOR EACH ROW
DECLARE 
	
	E_ID VARCHAR2(100);
	C_TYPE VARCHAR2(100);
	
BEGIN 

	IF INSERTING THEN 
	
		C_TYPE := 'INSERT';
		E_ID := :NEW.EMPLOYEE_ID;
		
	ELSIF UPDATING THEN
	
		C_TYPE := 'UPDATE';
		E_ID := :NEW.EMPLOYEE_ID;
		
	ELSE 
	
		C_TYPE := 'DELETE';
		E_ID := :OLD.EMPLOYEE_ID;
		
	END IF;
	

	INSERT INTO SALARY_HISTORY(HISTORY_ID, EMPLOYEE_ID, OLD_SALARY, NEW_SALARY, CHANGE_DATE, CHANGE_TYPE)
	VALUES(Salary_History_Seq.NEXTVAL, E_ID, :OLD.SALARY, :NEW.SALARY, TO_DATE(SYSDATE), C_TYPE);
	
END;
/

