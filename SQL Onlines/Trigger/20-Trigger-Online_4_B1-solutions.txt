1.

CREATE OR REPLACE TRIGGER SALARY_CHECKER
BEFORE UPDATE
OF SALARY, JOB_ID
ON EMPLOYEES
FOR EACH ROW
DECLARE 
	
	OLD_MIN_SAL NUMBER;
	OLD_MAX_SAL NUMBER;
	NEW_MIN_SAL NUMBER;
	NEW_MAX_SAL NUMBER;
	
BEGIN 
	
	SELECT MIN_SALARY INTO OLD_MIN_SAL
	FROM JOBS
	WHERE JOB_ID = :OLD.JOB_ID;
	
	SELECT MIN_SALARY INTO NEW_MIN_SAL
	FROM JOBS
	WHERE JOB_ID = :NEW.JOB_ID;
	
	SELECT MAX_SALARY INTO OLD_MAX_SAL
	FROM JOBS
	WHERE JOB_ID = :OLD.JOB_ID;
	
	SELECT MAX_SALARY INTO NEW_MAX_SAL
	FROM JOBS
	WHERE JOB_ID = :NEW.JOB_ID;
	
	IF NEW_MIN_SAL < OLD_MIN_SAL THEN 
	
		RAISE_APPLICATION_ERROR(-20001, 'New Minimum Salary is less than Old Minimum Salary');
		
	END IF;
	
	
	IF :NEW.SALARY < NEW_MIN_SAL THEN 
	
		:NEW.SALARY := NEW_MIN_SAL;
		
	ELSIF :NEW.SALARY > NEW_MAX_SAL THEN 
	
		:NEW.SALARY := NEW_MAX_SAL;
		
	END IF;
	
	
END;
/

2.

CREATE OR REPLACE TRIGGER CHECK_MANAGER
BEFORE INSERT
ON EMPLOYEES
FOR EACH ROW
DECLARE 
	
	NEW_MANAGER_ID VARCHAR2(100);
	
BEGIN 

	IF :NEW.MANAGER_ID IS NULL THEN 
	
		DBMS_OUTPUT.PUT_LINE( 'No manager of ' || :NEW.FIRST_NAME || ' has been assigned');
		
		SELECT MANAGER_ID INTO NEW_MANAGER_ID
		FROM DEPARTMENTS
		WHERE DEPARTMENT_ID = :NEW.DEPARTMENT_ID;
		
		:NEW.MANAGER_ID := NEW_MANAGER_ID;
		
	END IF;
	
	
END;
/

